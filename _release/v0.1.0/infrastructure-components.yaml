apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
    control-plane: controller-manager
  name: capone-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
    cluster.x-k8s.io/v1beta1: v1beta1
  name: oneclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: ONECluster
    listKind: ONEClusterList
    plural: oneclusters
    singular: onecluster
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ONECluster is the Schema for the oneclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ONEClusterSpec defines the desired state of ONECluster
            properties:
              controlPlaneEndpoint:
                description: APIEndpoint represents a reachable Kubernetes API endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              privateNetwork:
                properties:
                  dns:
                    type: string
                  floatingIP:
                    type: string
                  floatingOnly:
                    type: boolean
                  gateway:
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              publicNetwork:
                properties:
                  dns:
                    type: string
                  floatingIP:
                    type: string
                  floatingOnly:
                    type: boolean
                  gateway:
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              secretName:
                type: string
              virtualRouter:
                properties:
                  extraContext:
                    additionalProperties:
                      type: string
                    type: object
                  replicas:
                    format: int32
                    type: integer
                  templateName:
                    type: string
                required:
                - templateName
                type: object
            required:
            - secretName
            type: object
          status:
            description: ONEClusterStatus defines the observed state of ONECluster
            properties:
              conditions:
                description: Conditions provide observations of the operational state
                  of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: controlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a slice of FailureDomains.
                type: object
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
    cluster.x-k8s.io/v1beta1: v1beta1
  name: onemachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: ONEMachine
    listKind: ONEMachineList
    plural: onemachines
    singular: onemachine
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ONEMachine is the Schema for the onemachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ONEMachineSpec defines the desired state of ONEMachine
            properties:
              providerID:
                type: string
              templateName:
                type: string
            required:
            - templateName
            type: object
          status:
            description: ONEMachineStatus defines the observed state of ONEMachine
            properties:
              addresses:
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions provide observations of the operational state
                  of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
    cluster.x-k8s.io/v1beta1: v1beta1
  name: onemachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: ONEMachineTemplate
    listKind: ONEMachineTemplateList
    plural: onemachinetemplates
    singular: onemachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ONEMachineTemplate is the Schema for the onemachinetemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ONEMachineTemplateSpec defines the desired state of ONEMachineTemplate
            properties:
              template:
                properties:
                  metadata.omitempty:
                    description: |-
                      ObjectMeta is metadata that all persisted resources must have, which includes all objects
                      users must create. This is a copy of customizable fields from metav1.ObjectMeta.

                      ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`,
                      which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases
                      and read-only fields which end up in the generated CRD validation, having it as a subset simplifies
                      the API and some issues that can impact user experience.

                      During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                      for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs,
                      specifically `spec.metadata.creationTimestamp in body must be of type string: "null"`.
                      The investigation showed that `controller-tools@v2` behaves differently than its previous version
                      when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.

                      In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta`
                      had validation properties, including for `creationTimestamp` (metav1.Time).
                      The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null`
                      which breaks validation because the field isn't marked as nullable.

                      In future versions, controller-tools@v2 might allow overriding the type and validation for embedded
                      types. When that happens, this hack should be revisited.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: ONEMachineSpec defines the desired state of ONEMachine
                    properties:
                      providerID:
                        type: string
                      templateName:
                        type: string
                    required:
                    - templateName
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: ONEMachineTemplateStatus defines the observed state of ONEMachineTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-controller-manager
  namespace: capone-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-leader-election-role
  namespace: capone-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  - machines
  - machines/status
  - machinesets
  - machinesets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters
  - onemachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters/finalizers
  - onemachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters/status
  - onemachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-onecluster-editor-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-onecluster-viewer-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - oneclusters/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-onemachine-editor-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachines/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-onemachine-viewer-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachines/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-onemachinetemplate-editor-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachinetemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachinetemplates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-onemachinetemplate-viewer-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachinetemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - onemachinetemplates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-leader-election-rolebinding
  namespace: capone-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capone-leader-election-role
subjects:
- kind: ServiceAccount
  name: capone-controller-manager
  namespace: capone-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capone-manager-role
subjects:
- kind: ServiceAccount
  name: capone-controller-manager
  namespace: capone-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-opennebula
  name: capone-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capone-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: capone-controller-manager
  namespace: capone-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
    control-plane: controller-manager
  name: capone-controller-manager-metrics-service
  namespace: capone-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    cluster.x-k8s.io/provider: infrastructure-opennebula
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: cluster-api-provider-opennebula
    cluster.x-k8s.io/provider: infrastructure-opennebula
    control-plane: controller-manager
  name: capone-controller-manager
  namespace: capone-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-opennebula
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        cluster.x-k8s.io/provider: infrastructure-opennebula
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: ghcr.io/opennebula/cluster-api-provider-opennebula:v0.1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: capone-controller-manager
      terminationGracePeriodSeconds: 10
