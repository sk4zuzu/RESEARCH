---
- hosts: 127.0.0.1
  connection: local
  become: false
  tasks:
    - file:
        path: "{{ playbook_dir }}/.ssh/"
        state: directory
        mode: u=rwx,g=rx,o=

    - copy:
        dest: "{{ playbook_dir }}/.ssh/config"
        mode: u=rw,g=r,o=
        content: |
          Host {{ hostvars[groups.bastion[0]].ansible_host }}
            Hostname {{ hostvars[groups.bastion[0]].ansible_host }}
            User {{ hostvars[groups.bastion[0]].ansible_user }}
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            ForwardAgent yes

          {% for host in (groups.fe + groups.be) | unique -%}

          Host {{ hostvars[host].ansible_host }}
            Hostname {{ hostvars[host].ansible_host }}
            User {{ hostvars[host].ansible_user }}
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            ForwardAgent yes
            ProxyJump {{ hostvars[groups.bastion[0]].ansible_host }}

          {% endfor %}

- hosts: fe:be
  module_defaults: &module_defaults
    shell: { executable: /bin/bash }
  gather_facts: true
  tasks:
    - shell: |
        set -o errexit -o pipefail
        apk --no-cache add iproute2 iptables ipvsadm

    - set_fact:
        _vip: "172.16.1.69"
        _port: 8000
        _mark: 8000

- hosts: be
  module_defaults: *module_defaults
  tasks:
    - file:
        path: /etc/init.d/
        state: directory
        mode: u=rwx,go=rx

    - copy:
        dest: /var/tmp/index.html
        mode: u=rw,go=r
        content: |
          {{ ansible_host }}

    - copy:
        dest: /etc/init.d/p3http
        mode: u=rwx,go=rx
        content: |
          #!/sbin/openrc-run

          P3HTTP_LOGFILE="${P3HTTP_LOGFILE:-/var/log/${RC_SVCNAME}.log}"

          supervisor=supervise-daemon

          name="p3http"
          command="/usr/bin/python3"
          command_args="-m http.server --directory /var/tmp/ >>${P3HTTP_LOGFILE} 2>&1"

          output_log="${P3HTTP_LOGFILE}"
          error_log="${P3HTTP_LOGFILE}"

          pidfile="/run/p3http.pid"
          respawn_delay=5
          respawn_max=0

          rc_ulimit="${P3HTTP_ULIMIT:--c unlimited -n 1048576 -u unlimited}"

          depend() {
              after firewall
          }

          start_pre() {
              checkpath -f -m 0644 -o root:root "${P3HTTP_LOGFILE}"
          }

    - service:
        name: p3http
        enabled: true
        state: started

    - shell: |
        set -o errexit -o pipefail
        iptables -F -t nat
        iptables -F -t mangle
        iptables -F
        iptables -X

    - shell: |
        set -o errexit -o pipefail
        arptables -F

    - shell: |
        set -o errexit -o pipefail
        arptables -A INPUT  -d {{ _vip }} -j DROP
        arptables -A OUTPUT -s {{ _vip }} -j mangle --mangle-ip-s {{ ansible_host }}

    - shell: |
        set -o errexit -o pipefail

        VIP_IPV4_TEST=$(ip address show dev eth0 to {{ _vip }})

        if [[ -z "$VIP_IPV4_TEST" ]]; then
          ip address add dev eth0 {{ _vip }}/24
        fi

- hosts: fe[0]
  module_defaults: *module_defaults
  tasks:
    - shell: |
        set -o errexit -o pipefail

        VIP_IPV4_TEST=$(ip address show dev eth0 to {{ _vip }})

        if [[ -z "$VIP_IPV4_TEST" ]]; then
          ip address add dev eth0 {{ _vip }}/24
        fi

    - shell: |
        set -o errexit -o pipefail
        iptables -F -t nat
        iptables -F -t mangle
        iptables -F
        iptables -X

    - shell: |
        set -o errexit -o pipefail
        ipvsadm --clear

    - shell: |
        set -o errexit -o pipefail
        iptables -t mangle -A PREROUTING -d {{ _vip }} -m tcp -p tcp --dport {{ _port }} -j MARK --set-mark {{ _mark }}

    - shell: |
        set -o errexit -o pipefail
        ipvsadm -A -f {{ _mark }} -s rr
        {% for host in groups.be | map('extract', hostvars, ['ansible_host']) | list %}
        ipvsadm -a -f {{ _mark }} -r {{ host }}:{{ _port }} -g
        {% endfor %}
