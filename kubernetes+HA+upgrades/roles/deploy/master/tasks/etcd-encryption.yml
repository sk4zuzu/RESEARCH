---

- name: render etcd-encryption config
  template:
    dest: /etc/kubernetes/pki/etcd/etcd-encryption.conf
    src: etcd-encryption.conf.j2
  vars:
    _secret: >-
      {{ lookup('password', '/dev/null length=32') | b64encode }}

- name: load apiserver config
  slurp:
    path: &path /etc/kubernetes/manifests/kube-apiserver.yaml
  register: result

- name: save modified apiserver config
  copy:
    dest: *path
    content: >-
      {{ _decoded | combine(_update, recursive=true) }}

  vars:
    # parse yaml payload
    _decoded: >-
      {{ result.content | b64decode | from_yaml }}

    # convert spec.containers list to dict (dicts can be merged)
    _containers_dict: >-
      {{ range(_decoded.spec.containers | length) | zip(_decoded.spec.containers)
                                                  | list
                                                  | items2dict(key_name=0, value_name=1) }}

    # append parameter to command for first container
    _containers_dict_update:
      0:
        command: >-
          {{ _decoded.spec.containers.0.command + ['--encryption-provider-config=/etc/kubernetes/pki/etcd/etc-encryption.conf'] }}

    # convert updated spec.containers dict back to list
    _containers_updated: >-
      {{ (_containers_dict | combine(_containers_dict_update, recursive=true)).values()
                           | list }}

    # prepare update for whole document
    _update:
      spec:
        containers: >-
          {{ _containers_updated }}

- name: encrypt secrets
  shell: |
    set -o errexit -o pipefail && exec &> >(tee -a /tmp/kubectl.log)
    kubectl get secrets \
      --all-namespaces \
      -o json \
    | kubectl replace -f-
  args:
    executable: /bin/bash
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: result
  until: result is success
  retries: 69
  delay: 2

# vim:ts=2:sw=2:et:syn=yaml:
