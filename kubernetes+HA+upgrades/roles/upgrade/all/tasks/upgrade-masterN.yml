---

- assert:
    that:
      - kubernetes_version is defined
      - kubernetes_version is string
      - kubernetes_version | length > 0

- assert:
    that:
      - destination_master is defined
      - destination_master is string
      - destination_master | length > 0

- delegate_to: "{{ destination_master }}"  # destination master where the upgrade is performed
  delegate_facts: true

  vars:
    _ansible_fqdn: "{{ hostvars[destination_master].ansible_fqdn }}"

  block:
    - include_tasks: "{{ ansible_os_family | lower }}/upgrade-kubeadm.yml"

    - name: "drain master {{ _ansible_fqdn }}"
      shell: |
        set -o errexit -o pipefail
        kubectl drain {{ _ansible_fqdn }} \
          --ignore-daemonsets \
          --delete-local-data \
        |& tee -a /tmp/kubectl.log
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - block:
        - name: "upgrade master {{ _ansible_fqdn }}"
          shell: |
            set -o errexit -o pipefail
            kubeadm upgrade node |& tee -a /tmp/kubeadm.log
          args:
            executable: /bin/bash
      rescue:
        - name: "upgrade master {{ _ansible_fqdn }} (rescued)"
          shell: |
            set -o errexit -o pipefail
            kubeadm upgrade node experimental-control-plane |& tee -a /tmp/kubeadm.log
          args:
            executable: /bin/bash

    - include_tasks: "{{ ansible_os_family | lower }}/upgrade-binaries.yml"

    - name: "uncordon master {{ _ansible_fqdn }}"
      shell: |
        set -o errexit -o pipefail
        kubectl uncordon {{ _ansible_fqdn }} |& tee -a /tmp/kubectl.log
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

# vim:ts=2:sw=2:et:syn=yaml:
